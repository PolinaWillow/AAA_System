{"ast":null,"code":"var _jsxFileName = \"C:\\\\UsersFolders\\\\Polina\\\\\\u0423\\u0447\\u0435\\u0431\\u0430\\\\\\u041C\\u0410\\u0413\\u0410\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u0430\\u044F \\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E\\u0441\\u0442\\u044C\\\\AAA_System\\\\client\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useCallback, useEffect, useRef } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { Navbar } from '../components/Navbar';\nimport { TextCard } from '../components/TextCarrd';\nimport { AuthContext } from '../context/AuthContext';\nimport '../static/css/home.css';\nimport '../static/css/base.css';\nimport { ToolTip } from '../components/toolTips';\nimport { AddNewButton } from \"../components/buttons/addNew\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [encrTexts, setEncrTexts] = useState([]);\n  const {\n    loading,\n    request\n  } = useHttp();\n  const fetchLinks = useCallback(async () => {\n    try {\n      const fetched = await request('http://localhost:7000/api/encryptedtext/all');\n      setEncrTexts(fetched);\n    } catch (e) {}\n  }, [request]);\n  useEffect(() => {\n    fetchLinks();\n  }, [fetchLinks]);\n  console.log(encrTexts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"base-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-body-block text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-list text-start\",\n          children: encrTexts.map((elem, index) => /*#__PURE__*/_jsxDEV(TextCard, {\n            encrText: elem,\n            elementNum: index + 1\n          }, elem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 55\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-footer-block\",\n        children: (auth.userLevel === \"ADMIN\" || auth.userLevel === \"ENCODER\") && /*#__PURE__*/_jsxDEV(ToolTip, {\n          text: 'Add new encrypted text',\n          children: /*#__PURE__*/_jsxDEV(AddNewButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"bRYi7GXzZXfZCwJBniS2Nkj/BY4=\", false, function () {\n  return [useHttp];\n});\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useContext","useState","useCallback","useEffect","useRef","useHttp","Navbar","TextCard","AuthContext","ToolTip","AddNewButton","jsxDEV","_jsxDEV","HomePage","_s","auth","encrTexts","setEncrTexts","loading","request","fetchLinks","fetched","e","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","elem","index","encrText","elementNum","id","userLevel","text","_c","$RefreshReg$"],"sources":["C:/UsersFolders/Polina/Учеба/МАГА/1 семестр/Информационная безопасность/AAA_System/client/src/pages/HomePage.js"],"sourcesContent":["import React, {useContext, useState, useCallback, useEffect, useRef} from 'react'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { Navbar } from '../components/Navbar'\r\nimport { TextCard } from '../components/TextCarrd' \r\nimport {AuthContext} from '../context/AuthContext'\r\nimport '../static/css/home.css'\r\nimport '../static/css/base.css'\r\nimport { ToolTip } from '../components/toolTips'\r\nimport {AddNewButton} from \"../components/buttons/addNew\"\r\n\r\nexport const HomePage = () =>{\r\n    const auth = useContext(AuthContext)\r\n    const [encrTexts, setEncrTexts] = useState([])\r\n    const {loading, request} = useHttp()\r\n  \r\n    const fetchLinks = useCallback(async () => {\r\n      try {\r\n        const fetched = await request('http://localhost:7000/api/encryptedtext/all')\r\n        setEncrTexts(fetched)\r\n      } catch (e) {}\r\n    }, [request])\r\n  \r\n    useEffect(() => {\r\n      fetchLinks()\r\n    }, [fetchLinks])\r\n\r\n    console.log(encrTexts)\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"base-page\">\r\n                <div className='home-body-block text-center'>\r\n                    <div className='home-list text-start'>\r\n                        {encrTexts.map((elem, index)=><TextCard encrText={elem} key={elem.id} elementNum={index+1}/>)}\r\n                    </div>\r\n                </div>\r\n                <div className='home-footer-block'>\r\n                    {(auth.userLevel ===\"ADMIN\" || auth.userLevel ===\"ENCODER\")&&( \r\n                        <ToolTip text={'Add new encrypted text'} children={<AddNewButton/>}/>\r\n                    )}\r\n                </div>\r\n            </div>           \r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
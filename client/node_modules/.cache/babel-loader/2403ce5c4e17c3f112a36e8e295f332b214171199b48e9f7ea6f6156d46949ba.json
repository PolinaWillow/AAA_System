{"ast":null,"code":"var _jsxFileName = \"C:\\\\UsersFolders\\\\Polina\\\\\\u0423\\u0447\\u0435\\u0431\\u0430\\\\\\u041C\\u0410\\u0413\\u0410\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u0430\\u044F \\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E\\u0441\\u0442\\u044C\\\\AAA_System\\\\client\\\\src\\\\pages\\\\DencryptePage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Navbar } from \"../components/Navbar\";\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from \"../hooks/http.hook\";\nimport { Link } from \"react-router-dom\";\nimport saveBtn from \"../static/icons/download.svg\";\nimport \"../static/css/base.css\";\nimport \"../static/css/dencrypte.css\";\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DencryptePage = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const textId = useParams().id;\n  const [dencrText, setEncrTexts] = useState('');\n  const {\n    loading,\n    request\n  } = useHttp();\n  const fetchLinks = useCallback(async () => {\n    try {\n      const fetched = await request(`http://localhost:7000/api/dencryptedtext/${textId}`, 'GET');\n      setEncrTexts(fetched);\n    } catch (e) {}\n  }, [request]);\n  useEffect(() => {\n    fetchLinks();\n  }, [fetchLinks]);\n  const getPDF = async () => {\n    try {\n      axios.post(`http://localhost:7000/api/dencryptedtext/createPDF/${textId}, {}`).then(() => axios.get(`http://localhost:7000/api/dencryptedtext/getPdf/${textId}`, {\n        responseType: 'blob'\n      })).then(res => {\n        console.log(res);\n        const pdfBlob = new Blob([res.data], {\n          type: 'application/pdf'\n        });\n        saveAs(pdfBlob, 'dencr-text.pdf');\n      });\n      //const pdf_file =await request(`http://localhost:7000/api/dencryptedtext/downloadPDF/${textId}`, 'POST')\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"base-page text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dencr-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"text-card-icon\",\n              src: saveBtn,\n              alt: \"save as filet\",\n              onClick: getPDF\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              type: \"button\",\n              className: \"btn-close\",\n              \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"base-header-1 dencr-p\",\n            children: \"Dencrypted text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dencr-text\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"base-header-2\",\n            children: dencrText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(DencryptePage, \"j+rz8PNZ6Bwkz6/pW1f4zczQoDY=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = DencryptePage;\nvar _c;\n$RefreshReg$(_c, \"DencryptePage\");","map":{"version":3,"names":["React","useContext","useState","useCallback","useEffect","useParams","Navbar","AuthContext","useHttp","Link","saveBtn","axios","saveAs","jsxDEV","_jsxDEV","DencryptePage","_s","auth","textId","id","dencrText","setEncrTexts","loading","request","fetchLinks","fetched","e","getPDF","post","then","get","responseType","res","console","log","pdfBlob","Blob","data","type","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","to","_c","$RefreshReg$"],"sources":["C:/UsersFolders/Polina/Учеба/МАГА/1 семестр/Информационная безопасность/AAA_System/client/src/pages/DencryptePage.js"],"sourcesContent":["import React, {useContext, useState, useCallback, useEffect} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Navbar } from \"../components/Navbar\";\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { Link } from \"react-router-dom\";\r\nimport saveBtn from \"../static/icons/download.svg\"\r\nimport \"../static/css/base.css\"\r\nimport \"../static/css/dencrypte.css\"\r\nimport axios from 'axios'\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport const DencryptePage=()=>{\r\n    const auth = useContext(AuthContext)\r\n    const textId = useParams().id\r\n\r\n    const [dencrText, setEncrTexts] = useState('')\r\n    const {loading, request} = useHttp()\r\n  \r\n    const fetchLinks = useCallback(async () => {\r\n      try {\r\n        const fetched = await request(`http://localhost:7000/api/dencryptedtext/${textId}`, 'GET')\r\n        setEncrTexts(fetched)\r\n      } catch (e) {}\r\n    }, [request])\r\n  \r\n    useEffect(() => {\r\n      fetchLinks()\r\n    }, [fetchLinks])\r\n\r\n    const getPDF = async()=>{\r\n        try {\r\n            axios.post(`http://localhost:7000/api/dencryptedtext/createPDF/${textId}, {}`\r\n            ).then(() =>\r\n                axios.get(`http://localhost:7000/api/dencryptedtext/getPdf/${textId}`, { responseType: 'blob' })\r\n                \r\n            ).then((res) => {\r\n                console.log(res)\r\n                const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n                saveAs(pdfBlob, 'dencr-text.pdf');\r\n            })\r\n            //const pdf_file =await request(`http://localhost:7000/api/dencryptedtext/downloadPDF/${textId}`, 'POST')\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"base-page text-center\">\r\n                <div className=\"dencr-block\">\r\n                    <div className=\"text-start\" >\r\n                        <div className=\"text-end\">\r\n                            <img className = \"text-card-icon\" src={saveBtn} alt=\"save as filet\" onClick={getPDF}/>  \r\n                            <Link to={'/'} type=\"button\" className=\"btn-close\" aria-label=\"Закрыть\"/>\r\n                        </div>\r\n                        <p className=\"base-header-1 dencr-p\">Dencrypted text</p>\r\n                    </div>\r\n                    <hr/>\r\n\r\n                    <div className=\"dencr-text\">\r\n                        <div className=\"base-header-2\">{dencrText}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\UsersFolders\\\\Polina\\\\\\u0423\\u0447\\u0435\\u0431\\u0430\\\\\\u041C\\u0410\\u0413\\u0410\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u0430\\u044F \\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E\\u0441\\u0442\\u044C\\\\AAA_System\\\\client\\\\src\\\\pages\\\\DencryptePage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Navbar } from \"../components/Navbar\";\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from \"../hooks/http.hook\";\nimport { Link } from \"react-router-dom\";\nimport \"../static/css/base.css\";\nimport \"../static/css/dencrypte.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DencryptePage = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const textId = useParams().id;\n  const [dencrText, setEncrTexts] = useState('');\n  const {\n    loading,\n    request\n  } = useHttp();\n  const fetchLinks = useCallback(async () => {\n    try {\n      const fetched = await request(`http://localhost:7000/api/dencryptedtext/${textId}`, 'GET');\n      setEncrTexts(fetched);\n    } catch (e) {}\n  }, [request]);\n  useEffect(() => {\n    fetchLinks();\n  }, [fetchLinks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"base-page text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dencr-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"base-header-1 dencr-p\",\n            children: \"Dencrypted text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-end dencr-close\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              type: \"button\",\n              className: \"btn-close\",\n              \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"base-header-2\",\n            children: dencrText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(DencryptePage, \"j+rz8PNZ6Bwkz6/pW1f4zczQoDY=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = DencryptePage;\nvar _c;\n$RefreshReg$(_c, \"DencryptePage\");","map":{"version":3,"names":["React","useContext","useState","useCallback","useEffect","useParams","Navbar","AuthContext","useHttp","Link","jsxDEV","_jsxDEV","DencryptePage","_s","auth","textId","id","dencrText","setEncrTexts","loading","request","fetchLinks","fetched","e","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","type","_c","$RefreshReg$"],"sources":["C:/UsersFolders/Polina/Учеба/МАГА/1 семестр/Информационная безопасность/AAA_System/client/src/pages/DencryptePage.js"],"sourcesContent":["import React, {useContext, useState, useCallback, useEffect} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Navbar } from \"../components/Navbar\";\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../static/css/base.css\"\r\nimport \"../static/css/dencrypte.css\"\r\n\r\nexport const DencryptePage=()=>{\r\n    const auth = useContext(AuthContext)\r\n    const textId = useParams().id\r\n\r\n    const [dencrText, setEncrTexts] = useState('')\r\n    const {loading, request} = useHttp()\r\n  \r\n    const fetchLinks = useCallback(async () => {\r\n      try {\r\n        const fetched = await request(`http://localhost:7000/api/dencryptedtext/${textId}`, 'GET')\r\n        setEncrTexts(fetched)\r\n      } catch (e) {}\r\n    }, [request])\r\n  \r\n    useEffect(() => {\r\n      fetchLinks()\r\n    }, [fetchLinks])\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"base-page text-center\">\r\n                <div className=\"dencr-block\">\r\n                    <div className=\"text-start\">\r\n                        <p className=\"base-header-1 dencr-p\">Dencrypted text</p>\r\n                        <div className='text-end dencr-close'>\r\n                            <Link to={'/'} type=\"button\" className=\"btn-close\" aria-label=\"Закрыть\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p className=\"base-header-2\">{dencrText}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAO,OAAO;AACzE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAAQC,WAAW,QAAO,wBAAwB;AAClD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,wBAAwB;AAC/B,OAAO,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,aAAa,GAACA,CAAA,KAAI;EAAAC,EAAA;EAC3B,MAAMC,IAAI,GAAGb,UAAU,CAACM,WAAW,CAAC;EACpC,MAAMQ,MAAM,GAAGV,SAAS,CAAC,CAAC,CAACW,EAAE;EAE7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAACiB,OAAO;IAAEC;EAAO,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAEpC,MAAMa,UAAU,GAAGlB,WAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAMmB,OAAO,GAAG,MAAMF,OAAO,CAAE,4CAA2CL,MAAO,EAAC,EAAE,KAAK,CAAC;MAC1FG,YAAY,CAACI,OAAO,CAAC;IACvB,CAAC,CAAC,OAAOC,CAAC,EAAE,CAAC;EACf,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEbhB,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACIV,OAAA;IAAAa,QAAA,gBACIb,OAAA,CAACL,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTjB,OAAA;MAAKkB,SAAS,EAAC,uBAAuB;MAAAL,QAAA,eAClCb,OAAA;QAAKkB,SAAS,EAAC,aAAa;QAAAL,QAAA,gBACxBb,OAAA;UAAKkB,SAAS,EAAC,YAAY;UAAAL,QAAA,gBACvBb,OAAA;YAAGkB,SAAS,EAAC,uBAAuB;YAAAL,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACxDjB,OAAA;YAAKkB,SAAS,EAAC,sBAAsB;YAAAL,QAAA,eACjCb,OAAA,CAACF,IAAI;cAACqB,EAAE,EAAE,GAAI;cAACC,IAAI,EAAC,QAAQ;cAACF,SAAS,EAAC,WAAW;cAAC,cAAW;YAAS;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENjB,OAAA;UAAAa,QAAA,eACIb,OAAA;YAAGkB,SAAS,EAAC,eAAe;YAAAL,QAAA,EAAEP;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAf,EAAA,CArCYD,aAAa;EAAA,QAEPP,SAAS,EAGGG,OAAO;AAAA;AAAAwB,EAAA,GALzBpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
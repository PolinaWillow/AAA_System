{"ast":null,"code":"var _jsxFileName = \"C:\\\\UsersFolders\\\\Polina\\\\\\u0423\\u0447\\u0435\\u0431\\u0430\\\\\\u041C\\u0410\\u0413\\u0410\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u0430\\u044F \\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E\\u0441\\u0442\\u044C\\\\AAA_System\\\\client\\\\src\\\\components\\\\modals\\\\AddEncryptionText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useHttp } from '../../hooks/http.hook';\nimport { useMessage } from '../../hooks/message.hook';\nimport 'bootstrap';\nimport '../../static/css/modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddEncryptionText = ({\n  BlockId,\n  creatorId\n}) => {\n  _s();\n  //Получение контекста пользователя\n  //const auth = useContext(AuthContext)\n  const [newText, setNewText] = useState({\n    text: '',\n    userId: {\n      creatorId\n    }\n  });\n  console.log(creatorId);\n  console.log(newText);\n  const ChangeHandler = event => {\n    setNewText({\n      ...newText,\n      [event.target.name]: event.target.value\n    });\n  };\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  //Отслеживание ошибок\n  const message = useMessage();\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n  const encrypteHandler = async () => {\n    try {\n      //console.log(newText)\n      const data = await request('http://localhost:7000/api/encryptedtext/addnew', 'POST', {\n        ...newText\n      });\n      //console.log('Data', data)      \n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: BlockId,\n      tabIndex: \"-1\",\n      \"aria-labelledby\": \"addNewEncyptedText\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-lg \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content modal-background\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"base-header-1\",\n            children: \"New encryption text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"base-header-2\",\n            children: \"Please, enter your texst\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            name: \"text\",\n            placeholder: \"Your text\",\n            onChange: ChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-end modal-btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"base-btn base-btn-small\",\n              \"data-bs-dismiss\": \"modal\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"base-btn base-color-red base-btn-small\",\n              \"data-bs-dismiss\": \"modal\",\n              onClick: encrypteHandler,\n              children: \"Encrypte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(AddEncryptionText, \"uzPlY6QPLStyH+h0JWFqjgTOdyA=\", false, function () {\n  return [useHttp, useMessage];\n});\n_c = AddEncryptionText;\nvar _c;\n$RefreshReg$(_c, \"AddEncryptionText\");","map":{"version":3,"names":["React","useState","useContext","useEffect","AuthContext","useHttp","useMessage","jsxDEV","_jsxDEV","AddEncryptionText","BlockId","creatorId","_s","newText","setNewText","text","userId","console","log","ChangeHandler","event","target","name","value","loading","request","error","clearError","message","encrypteHandler","data","children","className","id","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","onClick","_c","$RefreshReg$"],"sources":["C:/UsersFolders/Polina/Учеба/МАГА/1 семестр/Информационная безопасность/AAA_System/client/src/components/modals/AddEncryptionText.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport {AuthContext} from '../../context/AuthContext'\r\nimport {useHttp} from '../../hooks/http.hook'\r\nimport {useMessage}from '../../hooks/message.hook'\r\nimport 'bootstrap'\r\nimport '../../static/css/modal.css'\r\n\r\nexport const AddEncryptionText = ({BlockId, creatorId}) =>{\r\n    //Получение контекста пользователя\r\n    //const auth = useContext(AuthContext)\r\n    const [newText, setNewText] = useState({\r\n        text: '', userId: {creatorId}\r\n    })\r\n\r\n    console.log(creatorId)\r\n    console.log(newText)\r\n\r\n    const ChangeHandler = event =>{\r\n        setNewText({...newText, [event.target.name]:event.target.value})\r\n    }\r\n\r\n    const {loading, request, error, clearError} = useHttp()\r\n    //Отслеживание ошибок\r\n    const message = useMessage()\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n\r\n    const encrypteHandler = async()=>{\r\n        try {\r\n            //console.log(newText)\r\n            const data = await request('http://localhost:7000/api/encryptedtext/addnew', 'POST', {...newText})\r\n            //console.log('Data', data)      \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n           <div className=\"modal fade\" id={BlockId} tabIndex=\"-1\" aria-labelledby=\"addNewEncyptedText\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-lg \">\r\n                <div className=\"modal-content modal-background\">\r\n                    <p className=\"base-header-1\">New encryption text</p> \r\n                    <hr/>                                                   \r\n                    <p className=\"base-header-2\">Please, enter your texst</p>\r\n                    <textarea className=\"form-control\" name='text' placeholder='Your text' onChange={ChangeHandler}></textarea>\r\n                    <div className='text-end modal-btns'>\r\n                        <button type=\"button\" className=\"base-btn base-btn-small\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"button\" className=\"base-btn base-color-red base-btn-small\" data-bs-dismiss=\"modal\" onClick={encrypteHandler}>Encrypte</button>\r\n                    </div>\r\n                </div>                                                                     \r\n                </div>\r\n            </div>\r\n      </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}